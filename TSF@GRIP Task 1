import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
Score_Data = pd.read_csv(url)
print(Score_Data)
Score_Data.plot(x='Hours', y='Scores', style='o')
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()
There is a Positive Regression
Preparing the data
x = Score_Data.iloc[:, :-1].values
y = Score_Data.iloc[:, 1].values
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, 
                                test_size=0.2, random_state=0)
Training the Algorithm
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train, y_train)
Plotting the Regression line
line = regressor.coef_*x+regressor.intercept_
Plotting the test Data
plt.scatter(x, y)
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.plot(x, line);
plt.show()
Predictions
print(x_test)
y_pred = regressor.predict(x_test)
Comparison
Comparison = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
Comparison
Comparing with other data
hours = 9.25
other_pred = regressor.predict(x_test)
print("Number of Hours = {}".format(hours))
print("Predicted Score = {}".format(other_pred[0]))
Evalution of the Model
from sklearn import metrics
print('Mean Absolute Error:',
     metrics.mean_absolute_error(y_test, y_pred))
